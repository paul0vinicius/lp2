package lp2.lab08;

import java.util.*;

public class EstrategiaSazonal implements Estrategia {
	private List<Opiniao> opinioesMaisRecentes = new ArrayList<Opiniao>();
	
	@Override
	public double calculaNotaNaMosca (List<Opiniao> opinioes) {
		if (opinioes.size() < 1) return 0;
		else if (opinioes.size() < 4) {
			for (int i = 0; i < opinioes.size(); i++){
				opinioesMaisRecentes.add(opinioes.get(i));
			}
			return calculaMedia(opinioesMaisRecentes);
		}
		else {
			List<Opiniao> copiaOpinioes = opinioes;
			for (int i = 0; i < 3; i++) {
				Date DataMaisAtual = copiaOpinioes.get(0).getDataDoComentario();
				Opiniao opiniaoMaisAtual = copiaOpinioes.get(0);
				for (Opiniao a: copiaOpinioes) {
					if (a.getDataDoComentario().after(DataMaisAtual)) {
						DataMaisAtual = a.getDataDoComentario();
						opiniaoMaisAtual = a;
					}
				}
				opinioesMaisRecentes.add(opiniaoMaisAtual);
				copiaOpinioes.remove(opiniaoMaisAtual);
			}
			
			return calculaMedia(opinioesMaisRecentes);
		}
	}
	
	@Override
	public List<Opiniao> selecionaComentariosRelevantes (List<Opiniao> opinioes) {
		List<Opiniao> comentariosMaisRelevantes = new ArrayList<Opiniao>();
		if (opinioesMaisRecentes.size() < 1) return null;
		else if (opinioesMaisRecentes.size() < 2) {
			comentariosMaisRelevantes.add(opinioes.get(0));
			return comentariosMaisRelevantes;
		}
		comentariosMaisRelevantes.add(opinioesMaisRecentes.get(0));
		comentariosMaisRelevantes.add(opinioesMaisRecentes.get(1));
		
		return comentariosMaisRelevantes;
	}
	
	private double calculaMedia (List<Opiniao> opinioesMaisRecentes) {
		int soma = 0;
		for (Opiniao a: opinioesMaisRecentes) {
			soma += a.getNotaProduto();
		}
		
		return soma / opinioesMaisRecentes.size();
	}
}
