package lp2.lab07;

import java.util.ArrayList;
import java.util.List;

public class Professores extends Contribuinte {
	private final static double TRIBUTACAO_UM_SALARIO = 0.05;
	private final static double TRIBUTACAO_ATE_CINCO_SALARIOS = 0.1;
	private final static double TRIBUTACAO_ACIMA_CINCO_SALARIOS = 0.2;
	private final static double SALARIO_MINIMO_BRUTO = 724.0;
	private double salario;
	private double despesaMaterialDidatico;
	private double somaRiquezasProf;
	private static double limiarRiquezaProf;
	private static List<Professores> professores = new ArrayList<Professores>();
	
	public Professores(String nomeContribuinte, String numeroContribuinte, double salarioMensal, double despesas, double valorCarro, double valorCasa) throws Exception {
		super(nomeContribuinte, numeroContribuinte, valorCarro, valorCasa);
		if (salarioMensal < 0 || despesas < 0) throw new Exception("Os valores nÃ£o podem ser negativos.");
		this.salario = salarioMensal;
		this.despesaMaterialDidatico = despesas;
		calculaTributacao();
		descontoTributacao();
		if (!verificaSeExiste(nomeContribuinte, numeroContribuinte)) {
			professores.add(this);
			numeroDeContribuintes++;
		}
	}

	@Override
	protected void calculaTributacao() {
		if (salario / SALARIO_MINIMO_BRUTO <= 1) {
			tributacao = (salario * 12) * TRIBUTACAO_UM_SALARIO;
		}
		else if (salario / SALARIO_MINIMO_BRUTO > 1 && salario / SALARIO_MINIMO_BRUTO <= 5) {
			tributacao = (salario * 12) * TRIBUTACAO_ATE_CINCO_SALARIOS;
		}
		else tributacao = (salario * 12) * TRIBUTACAO_ACIMA_CINCO_SALARIOS;
	}

	@Override
	protected void descontoTributacao() {
		descontos = despesaMaterialDidatico * 0.5;
	}

	@Override
	protected void limiarRiqueza() {
		atualizaLimiarRiqueza();
		if (sinaisRiqueza >= limiarRiquezaProf) {
			setRiquezaExcessiva(true);
		}
	}
	
	private void atualizaLimiarRiqueza () {
		somaRiquezasProf = 0.0;
		limiarRiquezaProf = 0.0;
		for (Professores a: professores) {
			somaRiquezasProf += (a.sinaisRiqueza);
		}
		limiarRiquezaProf = (somaRiquezasProf / professores.size()) * 1.5;
	}
	
	private boolean verificaSeExiste (String nome, String numero) {
		for (Professores a: professores) {
			if (a.getNomeContribuinte().equals(nome) || a.getNumeroContribuinte().equals(numero)) {
				return true;
			}
		}
		return false;
	}
	
	public double getSalario () {
		return salario;
	}
	

}
